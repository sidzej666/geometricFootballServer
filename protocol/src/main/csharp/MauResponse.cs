// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mau-response.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.CatAndDogStudio.GeometricFootball.Protocol {

  /// <summary>Holder for reflection information generated from mau-response.proto</summary>
  public static partial class MauResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for mau-response.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MauResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJtYXUtcmVzcG9uc2UucHJvdG8SMmNvbS5jYXRfYW5kX2RvZ19zdHVkaW8u",
            "Z2VvbWV0cmljX2Zvb3RiYWxsLnByb3RvY29sGgttb2RlbC5wcm90byIpCgpQ",
            "bGF5ZXJEYXRhEgwKBG5hbWUYASABKAkSDQoFY29sb3IYAiABKAkiiQEKDlRl",
            "YW1QbGF5ZXJEYXRhEgwKBG5hbWUYASABKAkSDQoFY29sb3IYAiABKAkSWgoO",
            "dGVhbVBsYXllclR5cGUYAyABKA4yQi5jb20uY2F0X2FuZF9kb2dfc3R1ZGlv",
            "Lmdlb21ldHJpY19mb290YmFsbC5wcm90b2NvbC5UZWFtUGxheWVyVHlwZSK2",
            "DgoIUmVzcG9uc2USTgoEdHlwZRgBIAEoDjJALmNvbS5jYXRfYW5kX2RvZ19z",
            "dHVkaW8uZ2VvbWV0cmljX2Zvb3RiYWxsLnByb3RvY29sLlJlc3BvbnNlVHlw",
            "ZRJUCgttYXVSZXNwb25zZRgCIAEoCzI/LmNvbS5jYXRfYW5kX2RvZ19zdHVk",
            "aW8uZ2VvbWV0cmljX2Zvb3RiYWxsLnByb3RvY29sLk1hdVJlc3BvbnNlEmoK",
            "FmF1dGhlbnRpY2F0aW9uUmVzcG9uc2UYAyABKAsySi5jb20uY2F0X2FuZF9k",
            "b2dfc3R1ZGlvLmdlb21ldHJpY19mb290YmFsbC5wcm90b2NvbC5BdXRoZW50",
            "aWNhdGlvblJlc3BvbnNlElgKDWVycm9yUmVzcG9uc2UYBCABKAsyQS5jb20u",
            "Y2F0X2FuZF9kb2dfc3R1ZGlvLmdlb21ldHJpY19mb290YmFsbC5wcm90b2Nv",
            "bC5FcnJvclJlc3BvbnNlEmIKEmRpc2Nvbm5lY3RSZXNwb25zZRgFIAEoCzJG",
            "LmNvbS5jYXRfYW5kX2RvZ19zdHVkaW8uZ2VvbWV0cmljX2Zvb3RiYWxsLnBy",
            "b3RvY29sLkRpc2Nvbm5lY3RSZXNwb25zZRJeChBob3N0R2FtZVJlc3BvbnNl",
            "GAYgASgLMkQuY29tLmNhdF9hbmRfZG9nX3N0dWRpby5nZW9tZXRyaWNfZm9v",
            "dGJhbGwucHJvdG9jb2wuSG9zdEdhbWVSZXNwb25zZRJgChFhd2FpdEdhbWVS",
            "ZXNwb25zZRgHIAEoCzJFLmNvbS5jYXRfYW5kX2RvZ19zdHVkaW8uZ2VvbWV0",
            "cmljX2Zvb3RiYWxsLnByb3RvY29sLkF3YWl0R2FtZVJlc3BvbnNlEloKCmdl",
            "dFBsYXllcnMYCCABKAsyRi5jb20uY2F0X2FuZF9kb2dfc3R1ZGlvLmdlb21l",
            "dHJpY19mb290YmFsbC5wcm90b2NvbC5HZXRQbGF5ZXJzUmVzcG9uc2USagoW",
            "dGVhbUludml0YXRpb25SZXNwb25zZRgJIAEoCzJKLmNvbS5jYXRfYW5kX2Rv",
            "Z19zdHVkaW8uZ2VvbWV0cmljX2Zvb3RiYWxsLnByb3RvY29sLlRlYW1JbnZp",
            "dGF0aW9uUmVzcG9uc2USXAoLdGVhbVBsYXllcnMYCiABKAsyRy5jb20uY2F0",
            "X2FuZF9kb2dfc3R1ZGlvLmdlb21ldHJpY19mb290YmFsbC5wcm90b2NvbC5U",
            "ZWFtUGxheWVyc1Jlc3BvbnNlElgKCWxlYXZlVGVhbRgLIAEoCzJFLmNvbS5j",
            "YXRfYW5kX2RvZ19zdHVkaW8uZ2VvbWV0cmljX2Zvb3RiYWxsLnByb3RvY29s",
            "LkxlYXZlVGVhbVJlc3BvbnNlEl4KDHBsYXllcktpY2tlZBgMIAEoCzJILmNv",
            "bS5jYXRfYW5kX2RvZ19zdHVkaW8uZ2VvbWV0cmljX2Zvb3RiYWxsLnByb3Rv",
            "Y29sLlBsYXllcktpY2tlZFJlc3BvbnNlEkYKBHRlYW0YDSABKAsyOC5jb20u",
            "Y2F0X2FuZF9kb2dfc3R1ZGlvLmdlb21ldHJpY19mb290YmFsbC5wcm90b2Nv",
            "bC5UZWFtElIKCm9rUmVzcG9uc2UYDiABKAsyPi5jb20uY2F0X2FuZF9kb2df",
            "c3R1ZGlvLmdlb21ldHJpY19mb290YmFsbC5wcm90b2NvbC5Pa1Jlc3BvbnNl",
            "EkoKBnRhY3RpYxgPIAEoCzI6LmNvbS5jYXRfYW5kX2RvZ19zdHVkaW8uZ2Vv",
            "bWV0cmljX2Zvb3RiYWxsLnByb3RvY29sLlRhY3RpYxJYCg10YWN0aWNNYXBw",
            "aW5nGBAgASgLMkEuY29tLmNhdF9hbmRfZG9nX3N0dWRpby5nZW9tZXRyaWNf",
            "Zm9vdGJhbGwucHJvdG9jb2wuVGFjdGljTWFwcGluZxJMCgdwbGF5ZXJzGBEg",
            "ASgLMjsuY29tLmNhdF9hbmRfZG9nX3N0dWRpby5nZW9tZXRyaWNfZm9vdGJh",
            "bGwucHJvdG9jb2wuUGxheWVycxJuChhwbGF5ZXJGb290YmFsbGVyTWFwcGlu",
            "Z3MYEiABKAsyTC5jb20uY2F0X2FuZF9kb2dfc3R1ZGlvLmdlb21ldHJpY19m",
            "b290YmFsbC5wcm90b2NvbC5QbGF5ZXJGb290YmFsbGVyTWFwcGluZ3MSXgoU",
            "cmVhZHlGb3JHYW1lUmVzcG9uc2UYEyABKAsyQC5jb20uY2F0X2FuZF9kb2df",
            "c3R1ZGlvLmdlb21ldHJpY19mb290YmFsbC5wcm90b2NvbC5SZWFkeUZvckdh",
            "bWUSWAoNb3Bwb25lbnRGb3VuZBgUIAEoCzJBLmNvbS5jYXRfYW5kX2RvZ19z",
            "dHVkaW8uZ2VvbWV0cmljX2Zvb3RiYWxsLnByb3RvY29sLk9wcG9uZW50Rm91",
            "bmQiKwoLTWF1UmVzcG9uc2USDwoHY2F0TmFtZRgBIAEoCRILCgNtYXUYAiAB",
            "KAkiOwoWQXV0aGVudGljYXRpb25SZXNwb25zZRIQCgh1c2VybmFtZRgBIAEo",
            "CRIPCgdtZXNzYWdlGAIgASgJIiAKDUVycm9yUmVzcG9uc2USDwoHbWVzc2Fn",
            "ZRgBIAEoCSIlChJEaXNjb25uZWN0UmVzcG9uc2USDwoHbWVzc2FnZRgBIAEo",
            "CSJJChBIb3N0R2FtZVJlc3BvbnNlEhAKCHVzZXJuYW1lGAEgASgJEhAKCGdh",
            "bWVOYW1lGAIgASgJEhEKCWhvc3RDb2xvchgDIAEoCSJVChFBd2FpdEdhbWVS",
            "ZXNwb25zZRIQCgh1c2VybmFtZRgBIAEoCRIWCg53YWl0aW5nTWVzc2FnZRgC",
            "IAEoCRIWCg5wcmVmZXJyZWRDb2xvchgDIAEoCSK6AQoSR2V0UGxheWVyc1Jl",
            "c3BvbnNlElAKBG1vZGUYASABKA4yQi5jb20uY2F0X2FuZF9kb2dfc3R1ZGlv",
            "Lmdlb21ldHJpY19mb290YmFsbC5wcm90b2NvbC5HZXRQbGF5ZXJzTW9kZRJS",
            "CgpwbGF5ZXJEYXRhGAIgAygLMj4uY29tLmNhdF9hbmRfZG9nX3N0dWRpby5n",
            "ZW9tZXRyaWNfZm9vdGJhbGwucHJvdG9jb2wuUGxheWVyRGF0YSLYAQoWVGVh",
            "bUludml0YXRpb25SZXNwb25zZRJeChBpbnZpdGF0aW9uUmVzdWx0GAEgASgO",
            "MkQuY29tLmNhdF9hbmRfZG9nX3N0dWRpby5nZW9tZXRyaWNfZm9vdGJhbGwu",
            "cHJvdG9jb2wuSW52aXRhdGlvblJlc3VsdBIKCgJpZBgCIAEoCRIPCgdtZXNz",
            "YWdlGAMgASgJEhQKDGdyYW50ZWRDb2xvchgEIAEoCRIUCgxnYW1lSG9zdE5h",
            "bWUYBSABKAkSFQoNaW52aXRlZFBsYXllchgGIAEoCSJxChNUZWFtUGxheWVy",
            "c1Jlc3BvbnNlEloKDnRlYW1QbGF5ZXJEYXRhGAEgAygLMkIuY29tLmNhdF9h",
            "bmRfZG9nX3N0dWRpby5nZW9tZXRyaWNfZm9vdGJhbGwucHJvdG9jb2wuVGVh",
            "bVBsYXllckRhdGEiSQoRTGVhdmVUZWFtUmVzcG9uc2USEAoIdGVhbU5hbWUY",
            "ASABKAkSEAoIdXNlcm5hbWUYAiABKAkSEAoIaG9zdExlZnQYAyABKAgiKAoU",
            "UGxheWVyS2lja2VkUmVzcG9uc2USEAoIdXNlcm5hbWUYASABKAkiHQoKT2tS",
            "ZXNwb25zZRIPCgdtZXNzYWdlGAEgASgJIh0KDU9wcG9uZW50Rm91bmQSDAoE",
            "bmFtZRgBIAEoCSqeBAoMUmVzcG9uc2VUeXBlEgcKA01BVRAAEhIKDkFVVEhF",
            "TlRJQ0FUSU9OEAESCQoFRVJST1IQAhIOCgpESVNDT05ORUNUEAMSDwoLR0FN",
            "RV9IT1NURUQQBBIVChFBV0FJVElOR19GT1JfR0FNRRAFEg8KC0dFVF9QTEFZ",
            "RVJTEAYSFQoRSU5WSVRBVElPTl9SRVNVTFQQBxIQCgxURUFNX1BMQVlFUlMQ",
            "CBISCg5PUFBPTkVOVF9GT1VORBAJEg4KCkxFQVZFX1RFQU0QChIRCg1QTEFZ",
            "RVJfS0lDS0VEEAsSDAoIU0VUX1RFQU0QDBIGCgJPSxANEg4KClNFVF9UQUNU",
            "SUMQDhIWChJTRVRfVEFDVElDX01BUFBJTkcQDxIUChBTRVRfVEVBTV9QTEFZ",
            "RVJTEBASIgoeU0VUX1RFQU1fUExBWUVSU19VU0VSU19NQVBQSU5HEBESEgoO",
            "UkVBRFlfRk9SX0dBTUUQEhIUChBPUFBPTkVOVF9QTEFZRVJTEBMSFQoRU0VU",
            "X09QUE9ORU5UX1RFQU0QFBIdChlTRVRfT1BQT05FTlRfVEVBTV9QTEFZRVJT",
            "EBUSFwoTU0VUX09QUE9ORU5UX1RBQ1RJQxAWEh8KG1NFVF9PUFBPTkVOVF9U",
            "QUNUSUNfTUFQUElORxAXEisKJ1NFVF9PUFBPTkVOVF9URUFNX1BMQVlFUlNf",
            "VVNFUlNfTUFQUElORxAYKn8KEEludml0YXRpb25SZXN1bHQSDAoIQUNDRVBU",
            "RUQQABIMCghSRUpFQ1RFRBABEgsKB0NSRUFURUQQAhIgChxJTlZJVEFUSU9O",
            "X0FDQ0VQVEVEX0JZX0dVRVNUEAMSIAocSU5WSVRBVElPTl9SRUpFQ1RFRF9C",
            "WV9HVUVTVBAEKjYKDlRlYW1QbGF5ZXJUeXBlEggKBEhPU1QQABIKCgZQTEFZ",
            "RVIQARIOCgpJTlZJVEFUSU9OEAJCTwoyY29tLmNhdF9hbmRfZG9nX3N0dWRp",
            "by5nZW9tZXRyaWNfZm9vdGJhbGwucHJvdG9jb2xCGUdlb21ldHJpY0Zvb3Ri",
            "YWxsUmVzcG9uc2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Com.CatAndDogStudio.GeometricFootball.Protocol.ModelReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.ResponseType), typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.InvitationResult), typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerData), global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerData.Parser, new[]{ "Name", "Color" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerData), global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerData.Parser, new[]{ "Name", "Color", "TeamPlayerType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.Response), global::Com.CatAndDogStudio.GeometricFootball.Protocol.Response.Parser, new[]{ "Type", "MauResponse", "AuthenticationResponse", "ErrorResponse", "DisconnectResponse", "HostGameResponse", "AwaitGameResponse", "GetPlayers", "TeamInvitationResponse", "TeamPlayers", "LeaveTeam", "PlayerKicked", "Team", "OkResponse", "Tactic", "TacticMapping", "Players", "PlayerFootballerMappings", "ReadyForGameResponse", "OpponentFound" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponse), global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponse.Parser, new[]{ "CatName", "Mau" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.AuthenticationResponse), global::Com.CatAndDogStudio.GeometricFootball.Protocol.AuthenticationResponse.Parser, new[]{ "Username", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.ErrorResponse), global::Com.CatAndDogStudio.GeometricFootball.Protocol.ErrorResponse.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.DisconnectResponse), global::Com.CatAndDogStudio.GeometricFootball.Protocol.DisconnectResponse.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.HostGameResponse), global::Com.CatAndDogStudio.GeometricFootball.Protocol.HostGameResponse.Parser, new[]{ "Username", "GameName", "HostColor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.AwaitGameResponse), global::Com.CatAndDogStudio.GeometricFootball.Protocol.AwaitGameResponse.Parser, new[]{ "Username", "WaitingMessage", "PreferredColor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersResponse), global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersResponse.Parser, new[]{ "Mode", "PlayerData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationResponse), global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationResponse.Parser, new[]{ "InvitationResult", "Id", "Message", "GrantedColor", "GameHostName", "InvitedPlayer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayersResponse), global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayersResponse.Parser, new[]{ "TeamPlayerData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.LeaveTeamResponse), global::Com.CatAndDogStudio.GeometricFootball.Protocol.LeaveTeamResponse.Parser, new[]{ "TeamName", "Username", "HostLeft" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerKickedResponse), global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerKickedResponse.Parser, new[]{ "Username" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.OkResponse), global::Com.CatAndDogStudio.GeometricFootball.Protocol.OkResponse.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.OpponentFound), global::Com.CatAndDogStudio.GeometricFootball.Protocol.OpponentFound.Parser, new[]{ "Name" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ResponseType {
    [pbr::OriginalName("MAU")] Mau = 0,
    [pbr::OriginalName("AUTHENTICATION")] Authentication = 1,
    [pbr::OriginalName("ERROR")] Error = 2,
    [pbr::OriginalName("DISCONNECT")] Disconnect = 3,
    [pbr::OriginalName("GAME_HOSTED")] GameHosted = 4,
    [pbr::OriginalName("AWAITING_FOR_GAME")] AwaitingForGame = 5,
    [pbr::OriginalName("GET_PLAYERS")] GetPlayers = 6,
    [pbr::OriginalName("INVITATION_RESULT")] InvitationResult = 7,
    [pbr::OriginalName("TEAM_PLAYERS")] TeamPlayers = 8,
    [pbr::OriginalName("OPPONENT_FOUND")] OpponentFound = 9,
    [pbr::OriginalName("LEAVE_TEAM")] LeaveTeam = 10,
    [pbr::OriginalName("PLAYER_KICKED")] PlayerKicked = 11,
    [pbr::OriginalName("SET_TEAM")] SetTeam = 12,
    [pbr::OriginalName("OK")] Ok = 13,
    [pbr::OriginalName("SET_TACTIC")] SetTactic = 14,
    [pbr::OriginalName("SET_TACTIC_MAPPING")] SetTacticMapping = 15,
    [pbr::OriginalName("SET_TEAM_PLAYERS")] SetTeamPlayers = 16,
    [pbr::OriginalName("SET_TEAM_PLAYERS_USERS_MAPPING")] SetTeamPlayersUsersMapping = 17,
    [pbr::OriginalName("READY_FOR_GAME")] ReadyForGame = 18,
    [pbr::OriginalName("OPPONENT_PLAYERS")] OpponentPlayers = 19,
    [pbr::OriginalName("SET_OPPONENT_TEAM")] SetOpponentTeam = 20,
    [pbr::OriginalName("SET_OPPONENT_TEAM_PLAYERS")] SetOpponentTeamPlayers = 21,
    [pbr::OriginalName("SET_OPPONENT_TACTIC")] SetOpponentTactic = 22,
    [pbr::OriginalName("SET_OPPONENT_TACTIC_MAPPING")] SetOpponentTacticMapping = 23,
    [pbr::OriginalName("SET_OPPONENT_TEAM_PLAYERS_USERS_MAPPING")] SetOpponentTeamPlayersUsersMapping = 24,
  }

  public enum InvitationResult {
    [pbr::OriginalName("ACCEPTED")] Accepted = 0,
    [pbr::OriginalName("REJECTED")] Rejected = 1,
    [pbr::OriginalName("CREATED")] Created = 2,
    [pbr::OriginalName("INVITATION_ACCEPTED_BY_GUEST")] InvitationAcceptedByGuest = 3,
    [pbr::OriginalName("INVITATION_REJECTED_BY_GUEST")] InvitationRejectedByGuest = 4,
  }

  public enum TeamPlayerType {
    [pbr::OriginalName("HOST")] Host = 0,
    [pbr::OriginalName("PLAYER")] Player = 1,
    [pbr::OriginalName("INVITATION")] Invitation = 2,
  }

  #endregion

  #region Messages
  public sealed partial class PlayerData : pb::IMessage<PlayerData> {
    private static readonly pb::MessageParser<PlayerData> _parser = new pb::MessageParser<PlayerData>(() => new PlayerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerData(PlayerData other) : this() {
      name_ = other.name_;
      color_ = other.color_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerData Clone() {
      return new PlayerData(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 2;
    private string color_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Color {
      get { return color_; }
      set {
        color_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Color != other.Color) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Color.Length != 0) hash ^= Color.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Color.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Color.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Color);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerData other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Color.Length != 0) {
        Color = other.Color;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Color = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TeamPlayerData : pb::IMessage<TeamPlayerData> {
    private static readonly pb::MessageParser<TeamPlayerData> _parser = new pb::MessageParser<TeamPlayerData>(() => new TeamPlayerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamPlayerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamPlayerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamPlayerData(TeamPlayerData other) : this() {
      name_ = other.name_;
      color_ = other.color_;
      teamPlayerType_ = other.teamPlayerType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamPlayerData Clone() {
      return new TeamPlayerData(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 2;
    private string color_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Color {
      get { return color_; }
      set {
        color_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "teamPlayerType" field.</summary>
    public const int TeamPlayerTypeFieldNumber = 3;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerType teamPlayerType_ = global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerType.Host;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerType TeamPlayerType {
      get { return teamPlayerType_; }
      set {
        teamPlayerType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamPlayerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamPlayerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Color != other.Color) return false;
      if (TeamPlayerType != other.TeamPlayerType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Color.Length != 0) hash ^= Color.GetHashCode();
      if (TeamPlayerType != global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerType.Host) hash ^= TeamPlayerType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Color.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Color);
      }
      if (TeamPlayerType != global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerType.Host) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TeamPlayerType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Color.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Color);
      }
      if (TeamPlayerType != global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerType.Host) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TeamPlayerType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamPlayerData other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Color.Length != 0) {
        Color = other.Color;
      }
      if (other.TeamPlayerType != global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerType.Host) {
        TeamPlayerType = other.TeamPlayerType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Color = input.ReadString();
            break;
          }
          case 24: {
            TeamPlayerType = (global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      type_ = other.type_;
      mauResponse_ = other.mauResponse_ != null ? other.mauResponse_.Clone() : null;
      authenticationResponse_ = other.authenticationResponse_ != null ? other.authenticationResponse_.Clone() : null;
      errorResponse_ = other.errorResponse_ != null ? other.errorResponse_.Clone() : null;
      disconnectResponse_ = other.disconnectResponse_ != null ? other.disconnectResponse_.Clone() : null;
      hostGameResponse_ = other.hostGameResponse_ != null ? other.hostGameResponse_.Clone() : null;
      awaitGameResponse_ = other.awaitGameResponse_ != null ? other.awaitGameResponse_.Clone() : null;
      getPlayers_ = other.getPlayers_ != null ? other.getPlayers_.Clone() : null;
      teamInvitationResponse_ = other.teamInvitationResponse_ != null ? other.teamInvitationResponse_.Clone() : null;
      teamPlayers_ = other.teamPlayers_ != null ? other.teamPlayers_.Clone() : null;
      leaveTeam_ = other.leaveTeam_ != null ? other.leaveTeam_.Clone() : null;
      playerKicked_ = other.playerKicked_ != null ? other.playerKicked_.Clone() : null;
      team_ = other.team_ != null ? other.team_.Clone() : null;
      okResponse_ = other.okResponse_ != null ? other.okResponse_.Clone() : null;
      tactic_ = other.tactic_ != null ? other.tactic_.Clone() : null;
      tacticMapping_ = other.tacticMapping_ != null ? other.tacticMapping_.Clone() : null;
      players_ = other.players_ != null ? other.players_.Clone() : null;
      playerFootballerMappings_ = other.playerFootballerMappings_ != null ? other.playerFootballerMappings_.Clone() : null;
      readyForGameResponse_ = other.readyForGameResponse_ != null ? other.readyForGameResponse_.Clone() : null;
      opponentFound_ = other.opponentFound_ != null ? other.opponentFound_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.ResponseType type_ = global::Com.CatAndDogStudio.GeometricFootball.Protocol.ResponseType.Mau;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.ResponseType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "mauResponse" field.</summary>
    public const int MauResponseFieldNumber = 2;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponse mauResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponse MauResponse {
      get { return mauResponse_; }
      set {
        mauResponse_ = value;
      }
    }

    /// <summary>Field number for the "authenticationResponse" field.</summary>
    public const int AuthenticationResponseFieldNumber = 3;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.AuthenticationResponse authenticationResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.AuthenticationResponse AuthenticationResponse {
      get { return authenticationResponse_; }
      set {
        authenticationResponse_ = value;
      }
    }

    /// <summary>Field number for the "errorResponse" field.</summary>
    public const int ErrorResponseFieldNumber = 4;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.ErrorResponse errorResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.ErrorResponse ErrorResponse {
      get { return errorResponse_; }
      set {
        errorResponse_ = value;
      }
    }

    /// <summary>Field number for the "disconnectResponse" field.</summary>
    public const int DisconnectResponseFieldNumber = 5;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.DisconnectResponse disconnectResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.DisconnectResponse DisconnectResponse {
      get { return disconnectResponse_; }
      set {
        disconnectResponse_ = value;
      }
    }

    /// <summary>Field number for the "hostGameResponse" field.</summary>
    public const int HostGameResponseFieldNumber = 6;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.HostGameResponse hostGameResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.HostGameResponse HostGameResponse {
      get { return hostGameResponse_; }
      set {
        hostGameResponse_ = value;
      }
    }

    /// <summary>Field number for the "awaitGameResponse" field.</summary>
    public const int AwaitGameResponseFieldNumber = 7;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.AwaitGameResponse awaitGameResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.AwaitGameResponse AwaitGameResponse {
      get { return awaitGameResponse_; }
      set {
        awaitGameResponse_ = value;
      }
    }

    /// <summary>Field number for the "getPlayers" field.</summary>
    public const int GetPlayersFieldNumber = 8;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersResponse getPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersResponse GetPlayers {
      get { return getPlayers_; }
      set {
        getPlayers_ = value;
      }
    }

    /// <summary>Field number for the "teamInvitationResponse" field.</summary>
    public const int TeamInvitationResponseFieldNumber = 9;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationResponse teamInvitationResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationResponse TeamInvitationResponse {
      get { return teamInvitationResponse_; }
      set {
        teamInvitationResponse_ = value;
      }
    }

    /// <summary>Field number for the "teamPlayers" field.</summary>
    public const int TeamPlayersFieldNumber = 10;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayersResponse teamPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayersResponse TeamPlayers {
      get { return teamPlayers_; }
      set {
        teamPlayers_ = value;
      }
    }

    /// <summary>Field number for the "leaveTeam" field.</summary>
    public const int LeaveTeamFieldNumber = 11;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.LeaveTeamResponse leaveTeam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.LeaveTeamResponse LeaveTeam {
      get { return leaveTeam_; }
      set {
        leaveTeam_ = value;
      }
    }

    /// <summary>Field number for the "playerKicked" field.</summary>
    public const int PlayerKickedFieldNumber = 12;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerKickedResponse playerKicked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerKickedResponse PlayerKicked {
      get { return playerKicked_; }
      set {
        playerKicked_ = value;
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 13;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.Team team_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.Team Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    /// <summary>Field number for the "okResponse" field.</summary>
    public const int OkResponseFieldNumber = 14;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.OkResponse okResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.OkResponse OkResponse {
      get { return okResponse_; }
      set {
        okResponse_ = value;
      }
    }

    /// <summary>Field number for the "tactic" field.</summary>
    public const int TacticFieldNumber = 15;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.Tactic tactic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.Tactic Tactic {
      get { return tactic_; }
      set {
        tactic_ = value;
      }
    }

    /// <summary>Field number for the "tacticMapping" field.</summary>
    public const int TacticMappingFieldNumber = 16;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.TacticMapping tacticMapping_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.TacticMapping TacticMapping {
      get { return tacticMapping_; }
      set {
        tacticMapping_ = value;
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 17;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.Players players_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.Players Players {
      get { return players_; }
      set {
        players_ = value;
      }
    }

    /// <summary>Field number for the "playerFootballerMappings" field.</summary>
    public const int PlayerFootballerMappingsFieldNumber = 18;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerFootballerMappings playerFootballerMappings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerFootballerMappings PlayerFootballerMappings {
      get { return playerFootballerMappings_; }
      set {
        playerFootballerMappings_ = value;
      }
    }

    /// <summary>Field number for the "readyForGameResponse" field.</summary>
    public const int ReadyForGameResponseFieldNumber = 19;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.ReadyForGame readyForGameResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.ReadyForGame ReadyForGameResponse {
      get { return readyForGameResponse_; }
      set {
        readyForGameResponse_ = value;
      }
    }

    /// <summary>Field number for the "opponentFound" field.</summary>
    public const int OpponentFoundFieldNumber = 20;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.OpponentFound opponentFound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.OpponentFound OpponentFound {
      get { return opponentFound_; }
      set {
        opponentFound_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(MauResponse, other.MauResponse)) return false;
      if (!object.Equals(AuthenticationResponse, other.AuthenticationResponse)) return false;
      if (!object.Equals(ErrorResponse, other.ErrorResponse)) return false;
      if (!object.Equals(DisconnectResponse, other.DisconnectResponse)) return false;
      if (!object.Equals(HostGameResponse, other.HostGameResponse)) return false;
      if (!object.Equals(AwaitGameResponse, other.AwaitGameResponse)) return false;
      if (!object.Equals(GetPlayers, other.GetPlayers)) return false;
      if (!object.Equals(TeamInvitationResponse, other.TeamInvitationResponse)) return false;
      if (!object.Equals(TeamPlayers, other.TeamPlayers)) return false;
      if (!object.Equals(LeaveTeam, other.LeaveTeam)) return false;
      if (!object.Equals(PlayerKicked, other.PlayerKicked)) return false;
      if (!object.Equals(Team, other.Team)) return false;
      if (!object.Equals(OkResponse, other.OkResponse)) return false;
      if (!object.Equals(Tactic, other.Tactic)) return false;
      if (!object.Equals(TacticMapping, other.TacticMapping)) return false;
      if (!object.Equals(Players, other.Players)) return false;
      if (!object.Equals(PlayerFootballerMappings, other.PlayerFootballerMappings)) return false;
      if (!object.Equals(ReadyForGameResponse, other.ReadyForGameResponse)) return false;
      if (!object.Equals(OpponentFound, other.OpponentFound)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Com.CatAndDogStudio.GeometricFootball.Protocol.ResponseType.Mau) hash ^= Type.GetHashCode();
      if (mauResponse_ != null) hash ^= MauResponse.GetHashCode();
      if (authenticationResponse_ != null) hash ^= AuthenticationResponse.GetHashCode();
      if (errorResponse_ != null) hash ^= ErrorResponse.GetHashCode();
      if (disconnectResponse_ != null) hash ^= DisconnectResponse.GetHashCode();
      if (hostGameResponse_ != null) hash ^= HostGameResponse.GetHashCode();
      if (awaitGameResponse_ != null) hash ^= AwaitGameResponse.GetHashCode();
      if (getPlayers_ != null) hash ^= GetPlayers.GetHashCode();
      if (teamInvitationResponse_ != null) hash ^= TeamInvitationResponse.GetHashCode();
      if (teamPlayers_ != null) hash ^= TeamPlayers.GetHashCode();
      if (leaveTeam_ != null) hash ^= LeaveTeam.GetHashCode();
      if (playerKicked_ != null) hash ^= PlayerKicked.GetHashCode();
      if (team_ != null) hash ^= Team.GetHashCode();
      if (okResponse_ != null) hash ^= OkResponse.GetHashCode();
      if (tactic_ != null) hash ^= Tactic.GetHashCode();
      if (tacticMapping_ != null) hash ^= TacticMapping.GetHashCode();
      if (players_ != null) hash ^= Players.GetHashCode();
      if (playerFootballerMappings_ != null) hash ^= PlayerFootballerMappings.GetHashCode();
      if (readyForGameResponse_ != null) hash ^= ReadyForGameResponse.GetHashCode();
      if (opponentFound_ != null) hash ^= OpponentFound.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Com.CatAndDogStudio.GeometricFootball.Protocol.ResponseType.Mau) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (mauResponse_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MauResponse);
      }
      if (authenticationResponse_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AuthenticationResponse);
      }
      if (errorResponse_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ErrorResponse);
      }
      if (disconnectResponse_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DisconnectResponse);
      }
      if (hostGameResponse_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HostGameResponse);
      }
      if (awaitGameResponse_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AwaitGameResponse);
      }
      if (getPlayers_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(GetPlayers);
      }
      if (teamInvitationResponse_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TeamInvitationResponse);
      }
      if (teamPlayers_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(TeamPlayers);
      }
      if (leaveTeam_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LeaveTeam);
      }
      if (playerKicked_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PlayerKicked);
      }
      if (team_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Team);
      }
      if (okResponse_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(OkResponse);
      }
      if (tactic_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Tactic);
      }
      if (tacticMapping_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(TacticMapping);
      }
      if (players_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Players);
      }
      if (playerFootballerMappings_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(PlayerFootballerMappings);
      }
      if (readyForGameResponse_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(ReadyForGameResponse);
      }
      if (opponentFound_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(OpponentFound);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Com.CatAndDogStudio.GeometricFootball.Protocol.ResponseType.Mau) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (mauResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MauResponse);
      }
      if (authenticationResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthenticationResponse);
      }
      if (errorResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorResponse);
      }
      if (disconnectResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisconnectResponse);
      }
      if (hostGameResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HostGameResponse);
      }
      if (awaitGameResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AwaitGameResponse);
      }
      if (getPlayers_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetPlayers);
      }
      if (teamInvitationResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TeamInvitationResponse);
      }
      if (teamPlayers_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TeamPlayers);
      }
      if (leaveTeam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeaveTeam);
      }
      if (playerKicked_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerKicked);
      }
      if (team_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Team);
      }
      if (okResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OkResponse);
      }
      if (tactic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tactic);
      }
      if (tacticMapping_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TacticMapping);
      }
      if (players_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Players);
      }
      if (playerFootballerMappings_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlayerFootballerMappings);
      }
      if (readyForGameResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReadyForGameResponse);
      }
      if (opponentFound_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OpponentFound);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Com.CatAndDogStudio.GeometricFootball.Protocol.ResponseType.Mau) {
        Type = other.Type;
      }
      if (other.mauResponse_ != null) {
        if (mauResponse_ == null) {
          MauResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponse();
        }
        MauResponse.MergeFrom(other.MauResponse);
      }
      if (other.authenticationResponse_ != null) {
        if (authenticationResponse_ == null) {
          AuthenticationResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.AuthenticationResponse();
        }
        AuthenticationResponse.MergeFrom(other.AuthenticationResponse);
      }
      if (other.errorResponse_ != null) {
        if (errorResponse_ == null) {
          ErrorResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.ErrorResponse();
        }
        ErrorResponse.MergeFrom(other.ErrorResponse);
      }
      if (other.disconnectResponse_ != null) {
        if (disconnectResponse_ == null) {
          DisconnectResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.DisconnectResponse();
        }
        DisconnectResponse.MergeFrom(other.DisconnectResponse);
      }
      if (other.hostGameResponse_ != null) {
        if (hostGameResponse_ == null) {
          HostGameResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.HostGameResponse();
        }
        HostGameResponse.MergeFrom(other.HostGameResponse);
      }
      if (other.awaitGameResponse_ != null) {
        if (awaitGameResponse_ == null) {
          AwaitGameResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.AwaitGameResponse();
        }
        AwaitGameResponse.MergeFrom(other.AwaitGameResponse);
      }
      if (other.getPlayers_ != null) {
        if (getPlayers_ == null) {
          GetPlayers = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersResponse();
        }
        GetPlayers.MergeFrom(other.GetPlayers);
      }
      if (other.teamInvitationResponse_ != null) {
        if (teamInvitationResponse_ == null) {
          TeamInvitationResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationResponse();
        }
        TeamInvitationResponse.MergeFrom(other.TeamInvitationResponse);
      }
      if (other.teamPlayers_ != null) {
        if (teamPlayers_ == null) {
          TeamPlayers = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayersResponse();
        }
        TeamPlayers.MergeFrom(other.TeamPlayers);
      }
      if (other.leaveTeam_ != null) {
        if (leaveTeam_ == null) {
          LeaveTeam = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.LeaveTeamResponse();
        }
        LeaveTeam.MergeFrom(other.LeaveTeam);
      }
      if (other.playerKicked_ != null) {
        if (playerKicked_ == null) {
          PlayerKicked = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerKickedResponse();
        }
        PlayerKicked.MergeFrom(other.PlayerKicked);
      }
      if (other.team_ != null) {
        if (team_ == null) {
          Team = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.Team();
        }
        Team.MergeFrom(other.Team);
      }
      if (other.okResponse_ != null) {
        if (okResponse_ == null) {
          OkResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.OkResponse();
        }
        OkResponse.MergeFrom(other.OkResponse);
      }
      if (other.tactic_ != null) {
        if (tactic_ == null) {
          Tactic = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.Tactic();
        }
        Tactic.MergeFrom(other.Tactic);
      }
      if (other.tacticMapping_ != null) {
        if (tacticMapping_ == null) {
          TacticMapping = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.TacticMapping();
        }
        TacticMapping.MergeFrom(other.TacticMapping);
      }
      if (other.players_ != null) {
        if (players_ == null) {
          Players = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.Players();
        }
        Players.MergeFrom(other.Players);
      }
      if (other.playerFootballerMappings_ != null) {
        if (playerFootballerMappings_ == null) {
          PlayerFootballerMappings = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerFootballerMappings();
        }
        PlayerFootballerMappings.MergeFrom(other.PlayerFootballerMappings);
      }
      if (other.readyForGameResponse_ != null) {
        if (readyForGameResponse_ == null) {
          ReadyForGameResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.ReadyForGame();
        }
        ReadyForGameResponse.MergeFrom(other.ReadyForGameResponse);
      }
      if (other.opponentFound_ != null) {
        if (opponentFound_ == null) {
          OpponentFound = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.OpponentFound();
        }
        OpponentFound.MergeFrom(other.OpponentFound);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Com.CatAndDogStudio.GeometricFootball.Protocol.ResponseType) input.ReadEnum();
            break;
          }
          case 18: {
            if (mauResponse_ == null) {
              MauResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponse();
            }
            input.ReadMessage(MauResponse);
            break;
          }
          case 26: {
            if (authenticationResponse_ == null) {
              AuthenticationResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.AuthenticationResponse();
            }
            input.ReadMessage(AuthenticationResponse);
            break;
          }
          case 34: {
            if (errorResponse_ == null) {
              ErrorResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.ErrorResponse();
            }
            input.ReadMessage(ErrorResponse);
            break;
          }
          case 42: {
            if (disconnectResponse_ == null) {
              DisconnectResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.DisconnectResponse();
            }
            input.ReadMessage(DisconnectResponse);
            break;
          }
          case 50: {
            if (hostGameResponse_ == null) {
              HostGameResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.HostGameResponse();
            }
            input.ReadMessage(HostGameResponse);
            break;
          }
          case 58: {
            if (awaitGameResponse_ == null) {
              AwaitGameResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.AwaitGameResponse();
            }
            input.ReadMessage(AwaitGameResponse);
            break;
          }
          case 66: {
            if (getPlayers_ == null) {
              GetPlayers = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersResponse();
            }
            input.ReadMessage(GetPlayers);
            break;
          }
          case 74: {
            if (teamInvitationResponse_ == null) {
              TeamInvitationResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationResponse();
            }
            input.ReadMessage(TeamInvitationResponse);
            break;
          }
          case 82: {
            if (teamPlayers_ == null) {
              TeamPlayers = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayersResponse();
            }
            input.ReadMessage(TeamPlayers);
            break;
          }
          case 90: {
            if (leaveTeam_ == null) {
              LeaveTeam = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.LeaveTeamResponse();
            }
            input.ReadMessage(LeaveTeam);
            break;
          }
          case 98: {
            if (playerKicked_ == null) {
              PlayerKicked = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerKickedResponse();
            }
            input.ReadMessage(PlayerKicked);
            break;
          }
          case 106: {
            if (team_ == null) {
              Team = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.Team();
            }
            input.ReadMessage(Team);
            break;
          }
          case 114: {
            if (okResponse_ == null) {
              OkResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.OkResponse();
            }
            input.ReadMessage(OkResponse);
            break;
          }
          case 122: {
            if (tactic_ == null) {
              Tactic = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.Tactic();
            }
            input.ReadMessage(Tactic);
            break;
          }
          case 130: {
            if (tacticMapping_ == null) {
              TacticMapping = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.TacticMapping();
            }
            input.ReadMessage(TacticMapping);
            break;
          }
          case 138: {
            if (players_ == null) {
              Players = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.Players();
            }
            input.ReadMessage(Players);
            break;
          }
          case 146: {
            if (playerFootballerMappings_ == null) {
              PlayerFootballerMappings = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerFootballerMappings();
            }
            input.ReadMessage(PlayerFootballerMappings);
            break;
          }
          case 154: {
            if (readyForGameResponse_ == null) {
              ReadyForGameResponse = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.ReadyForGame();
            }
            input.ReadMessage(ReadyForGameResponse);
            break;
          }
          case 162: {
            if (opponentFound_ == null) {
              OpponentFound = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.OpponentFound();
            }
            input.ReadMessage(OpponentFound);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MauResponse : pb::IMessage<MauResponse> {
    private static readonly pb::MessageParser<MauResponse> _parser = new pb::MessageParser<MauResponse>(() => new MauResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MauResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MauResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MauResponse(MauResponse other) : this() {
      catName_ = other.catName_;
      mau_ = other.mau_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MauResponse Clone() {
      return new MauResponse(this);
    }

    /// <summary>Field number for the "catName" field.</summary>
    public const int CatNameFieldNumber = 1;
    private string catName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CatName {
      get { return catName_; }
      set {
        catName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mau" field.</summary>
    public const int MauFieldNumber = 2;
    private string mau_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mau {
      get { return mau_; }
      set {
        mau_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MauResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MauResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatName != other.CatName) return false;
      if (Mau != other.Mau) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatName.Length != 0) hash ^= CatName.GetHashCode();
      if (Mau.Length != 0) hash ^= Mau.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CatName);
      }
      if (Mau.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Mau);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CatName);
      }
      if (Mau.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mau);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MauResponse other) {
      if (other == null) {
        return;
      }
      if (other.CatName.Length != 0) {
        CatName = other.CatName;
      }
      if (other.Mau.Length != 0) {
        Mau = other.Mau;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CatName = input.ReadString();
            break;
          }
          case 18: {
            Mau = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuthenticationResponse : pb::IMessage<AuthenticationResponse> {
    private static readonly pb::MessageParser<AuthenticationResponse> _parser = new pb::MessageParser<AuthenticationResponse>(() => new AuthenticationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthenticationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticationResponse(AuthenticationResponse other) : this() {
      username_ = other.username_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticationResponse Clone() {
      return new AuthenticationResponse(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthenticationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthenticationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthenticationResponse other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ErrorResponse : pb::IMessage<ErrorResponse> {
    private static readonly pb::MessageParser<ErrorResponse> _parser = new pb::MessageParser<ErrorResponse>(() => new ErrorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse(ErrorResponse other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse Clone() {
      return new ErrorResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ErrorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ErrorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ErrorResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DisconnectResponse : pb::IMessage<DisconnectResponse> {
    private static readonly pb::MessageParser<DisconnectResponse> _parser = new pb::MessageParser<DisconnectResponse>(() => new DisconnectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisconnectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectResponse(DisconnectResponse other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectResponse Clone() {
      return new DisconnectResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisconnectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisconnectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisconnectResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HostGameResponse : pb::IMessage<HostGameResponse> {
    private static readonly pb::MessageParser<HostGameResponse> _parser = new pb::MessageParser<HostGameResponse>(() => new HostGameResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HostGameResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HostGameResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HostGameResponse(HostGameResponse other) : this() {
      username_ = other.username_;
      gameName_ = other.gameName_;
      hostColor_ = other.hostColor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HostGameResponse Clone() {
      return new HostGameResponse(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameName" field.</summary>
    public const int GameNameFieldNumber = 2;
    private string gameName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameName {
      get { return gameName_; }
      set {
        gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hostColor" field.</summary>
    public const int HostColorFieldNumber = 3;
    private string hostColor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostColor {
      get { return hostColor_; }
      set {
        hostColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HostGameResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HostGameResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (GameName != other.GameName) return false;
      if (HostColor != other.HostColor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (GameName.Length != 0) hash ^= GameName.GetHashCode();
      if (HostColor.Length != 0) hash ^= HostColor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (GameName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameName);
      }
      if (HostColor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HostColor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (GameName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
      }
      if (HostColor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostColor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HostGameResponse other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.GameName.Length != 0) {
        GameName = other.GameName;
      }
      if (other.HostColor.Length != 0) {
        HostColor = other.HostColor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            GameName = input.ReadString();
            break;
          }
          case 26: {
            HostColor = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AwaitGameResponse : pb::IMessage<AwaitGameResponse> {
    private static readonly pb::MessageParser<AwaitGameResponse> _parser = new pb::MessageParser<AwaitGameResponse>(() => new AwaitGameResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AwaitGameResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwaitGameResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwaitGameResponse(AwaitGameResponse other) : this() {
      username_ = other.username_;
      waitingMessage_ = other.waitingMessage_;
      preferredColor_ = other.preferredColor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwaitGameResponse Clone() {
      return new AwaitGameResponse(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "waitingMessage" field.</summary>
    public const int WaitingMessageFieldNumber = 2;
    private string waitingMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WaitingMessage {
      get { return waitingMessage_; }
      set {
        waitingMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "preferredColor" field.</summary>
    public const int PreferredColorFieldNumber = 3;
    private string preferredColor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PreferredColor {
      get { return preferredColor_; }
      set {
        preferredColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AwaitGameResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AwaitGameResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (WaitingMessage != other.WaitingMessage) return false;
      if (PreferredColor != other.PreferredColor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (WaitingMessage.Length != 0) hash ^= WaitingMessage.GetHashCode();
      if (PreferredColor.Length != 0) hash ^= PreferredColor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (WaitingMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WaitingMessage);
      }
      if (PreferredColor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PreferredColor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (WaitingMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WaitingMessage);
      }
      if (PreferredColor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreferredColor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AwaitGameResponse other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.WaitingMessage.Length != 0) {
        WaitingMessage = other.WaitingMessage;
      }
      if (other.PreferredColor.Length != 0) {
        PreferredColor = other.PreferredColor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            WaitingMessage = input.ReadString();
            break;
          }
          case 26: {
            PreferredColor = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetPlayersResponse : pb::IMessage<GetPlayersResponse> {
    private static readonly pb::MessageParser<GetPlayersResponse> _parser = new pb::MessageParser<GetPlayersResponse>(() => new GetPlayersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPlayersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayersResponse(GetPlayersResponse other) : this() {
      mode_ = other.mode_;
      playerData_ = other.playerData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayersResponse Clone() {
      return new GetPlayersResponse(this);
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 1;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode mode_ = global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode.GameHosts;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    /// <summary>Field number for the "playerData" field.</summary>
    public const int PlayerDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerData> _repeated_playerData_codec
        = pb::FieldCodec.ForMessage(18, global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerData.Parser);
    private readonly pbc::RepeatedField<global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerData> playerData_ = new pbc::RepeatedField<global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.CatAndDogStudio.GeometricFootball.Protocol.PlayerData> PlayerData {
      get { return playerData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPlayersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPlayersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mode != other.Mode) return false;
      if(!playerData_.Equals(other.playerData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mode != global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode.GameHosts) hash ^= Mode.GetHashCode();
      hash ^= playerData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mode != global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode.GameHosts) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mode);
      }
      playerData_.WriteTo(output, _repeated_playerData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mode != global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode.GameHosts) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      size += playerData_.CalculateSize(_repeated_playerData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPlayersResponse other) {
      if (other == null) {
        return;
      }
      if (other.Mode != global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode.GameHosts) {
        Mode = other.Mode;
      }
      playerData_.Add(other.playerData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Mode = (global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode) input.ReadEnum();
            break;
          }
          case 18: {
            playerData_.AddEntriesFrom(input, _repeated_playerData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TeamInvitationResponse : pb::IMessage<TeamInvitationResponse> {
    private static readonly pb::MessageParser<TeamInvitationResponse> _parser = new pb::MessageParser<TeamInvitationResponse>(() => new TeamInvitationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamInvitationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamInvitationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamInvitationResponse(TeamInvitationResponse other) : this() {
      invitationResult_ = other.invitationResult_;
      id_ = other.id_;
      message_ = other.message_;
      grantedColor_ = other.grantedColor_;
      gameHostName_ = other.gameHostName_;
      invitedPlayer_ = other.invitedPlayer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamInvitationResponse Clone() {
      return new TeamInvitationResponse(this);
    }

    /// <summary>Field number for the "invitationResult" field.</summary>
    public const int InvitationResultFieldNumber = 1;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.InvitationResult invitationResult_ = global::Com.CatAndDogStudio.GeometricFootball.Protocol.InvitationResult.Accepted;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.InvitationResult InvitationResult {
      get { return invitationResult_; }
      set {
        invitationResult_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "grantedColor" field.</summary>
    public const int GrantedColorFieldNumber = 4;
    private string grantedColor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GrantedColor {
      get { return grantedColor_; }
      set {
        grantedColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameHostName" field.</summary>
    public const int GameHostNameFieldNumber = 5;
    private string gameHostName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameHostName {
      get { return gameHostName_; }
      set {
        gameHostName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "invitedPlayer" field.</summary>
    public const int InvitedPlayerFieldNumber = 6;
    private string invitedPlayer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InvitedPlayer {
      get { return invitedPlayer_; }
      set {
        invitedPlayer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamInvitationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamInvitationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InvitationResult != other.InvitationResult) return false;
      if (Id != other.Id) return false;
      if (Message != other.Message) return false;
      if (GrantedColor != other.GrantedColor) return false;
      if (GameHostName != other.GameHostName) return false;
      if (InvitedPlayer != other.InvitedPlayer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InvitationResult != global::Com.CatAndDogStudio.GeometricFootball.Protocol.InvitationResult.Accepted) hash ^= InvitationResult.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (GrantedColor.Length != 0) hash ^= GrantedColor.GetHashCode();
      if (GameHostName.Length != 0) hash ^= GameHostName.GetHashCode();
      if (InvitedPlayer.Length != 0) hash ^= InvitedPlayer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InvitationResult != global::Com.CatAndDogStudio.GeometricFootball.Protocol.InvitationResult.Accepted) {
        output.WriteRawTag(8);
        output.WriteEnum((int) InvitationResult);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (GrantedColor.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GrantedColor);
      }
      if (GameHostName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GameHostName);
      }
      if (InvitedPlayer.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(InvitedPlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InvitationResult != global::Com.CatAndDogStudio.GeometricFootball.Protocol.InvitationResult.Accepted) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InvitationResult);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (GrantedColor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GrantedColor);
      }
      if (GameHostName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameHostName);
      }
      if (InvitedPlayer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvitedPlayer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamInvitationResponse other) {
      if (other == null) {
        return;
      }
      if (other.InvitationResult != global::Com.CatAndDogStudio.GeometricFootball.Protocol.InvitationResult.Accepted) {
        InvitationResult = other.InvitationResult;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.GrantedColor.Length != 0) {
        GrantedColor = other.GrantedColor;
      }
      if (other.GameHostName.Length != 0) {
        GameHostName = other.GameHostName;
      }
      if (other.InvitedPlayer.Length != 0) {
        InvitedPlayer = other.InvitedPlayer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InvitationResult = (global::Com.CatAndDogStudio.GeometricFootball.Protocol.InvitationResult) input.ReadEnum();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 34: {
            GrantedColor = input.ReadString();
            break;
          }
          case 42: {
            GameHostName = input.ReadString();
            break;
          }
          case 50: {
            InvitedPlayer = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TeamPlayersResponse : pb::IMessage<TeamPlayersResponse> {
    private static readonly pb::MessageParser<TeamPlayersResponse> _parser = new pb::MessageParser<TeamPlayersResponse>(() => new TeamPlayersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamPlayersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamPlayersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamPlayersResponse(TeamPlayersResponse other) : this() {
      teamPlayerData_ = other.teamPlayerData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamPlayersResponse Clone() {
      return new TeamPlayersResponse(this);
    }

    /// <summary>Field number for the "teamPlayerData" field.</summary>
    public const int TeamPlayerDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerData> _repeated_teamPlayerData_codec
        = pb::FieldCodec.ForMessage(10, global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerData.Parser);
    private readonly pbc::RepeatedField<global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerData> teamPlayerData_ = new pbc::RepeatedField<global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamPlayerData> TeamPlayerData {
      get { return teamPlayerData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamPlayersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamPlayersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!teamPlayerData_.Equals(other.teamPlayerData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= teamPlayerData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      teamPlayerData_.WriteTo(output, _repeated_teamPlayerData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += teamPlayerData_.CalculateSize(_repeated_teamPlayerData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamPlayersResponse other) {
      if (other == null) {
        return;
      }
      teamPlayerData_.Add(other.teamPlayerData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            teamPlayerData_.AddEntriesFrom(input, _repeated_teamPlayerData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaveTeamResponse : pb::IMessage<LeaveTeamResponse> {
    private static readonly pb::MessageParser<LeaveTeamResponse> _parser = new pb::MessageParser<LeaveTeamResponse>(() => new LeaveTeamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveTeamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveTeamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveTeamResponse(LeaveTeamResponse other) : this() {
      teamName_ = other.teamName_;
      username_ = other.username_;
      hostLeft_ = other.hostLeft_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveTeamResponse Clone() {
      return new LeaveTeamResponse(this);
    }

    /// <summary>Field number for the "teamName" field.</summary>
    public const int TeamNameFieldNumber = 1;
    private string teamName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TeamName {
      get { return teamName_; }
      set {
        teamName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hostLeft" field.</summary>
    public const int HostLeftFieldNumber = 3;
    private bool hostLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HostLeft {
      get { return hostLeft_; }
      set {
        hostLeft_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveTeamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveTeamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TeamName != other.TeamName) return false;
      if (Username != other.Username) return false;
      if (HostLeft != other.HostLeft) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TeamName.Length != 0) hash ^= TeamName.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (HostLeft != false) hash ^= HostLeft.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TeamName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TeamName);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (HostLeft != false) {
        output.WriteRawTag(24);
        output.WriteBool(HostLeft);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TeamName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamName);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HostLeft != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveTeamResponse other) {
      if (other == null) {
        return;
      }
      if (other.TeamName.Length != 0) {
        TeamName = other.TeamName;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.HostLeft != false) {
        HostLeft = other.HostLeft;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TeamName = input.ReadString();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 24: {
            HostLeft = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerKickedResponse : pb::IMessage<PlayerKickedResponse> {
    private static readonly pb::MessageParser<PlayerKickedResponse> _parser = new pb::MessageParser<PlayerKickedResponse>(() => new PlayerKickedResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerKickedResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerKickedResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerKickedResponse(PlayerKickedResponse other) : this() {
      username_ = other.username_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerKickedResponse Clone() {
      return new PlayerKickedResponse(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerKickedResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerKickedResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerKickedResponse other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OkResponse : pb::IMessage<OkResponse> {
    private static readonly pb::MessageParser<OkResponse> _parser = new pb::MessageParser<OkResponse>(() => new OkResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OkResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OkResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OkResponse(OkResponse other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OkResponse Clone() {
      return new OkResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OkResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OkResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OkResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OpponentFound : pb::IMessage<OpponentFound> {
    private static readonly pb::MessageParser<OpponentFound> _parser = new pb::MessageParser<OpponentFound>(() => new OpponentFound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpponentFound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauResponseReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpponentFound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpponentFound(OpponentFound other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpponentFound Clone() {
      return new OpponentFound(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpponentFound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpponentFound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpponentFound other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
