// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mau-request.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.CatAndDogStudio.GeometricFootball.Protocol {

  /// <summary>Holder for reflection information generated from mau-request.proto</summary>
  public static partial class MauRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for mau-request.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MauRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFtYXUtcmVxdWVzdC5wcm90bxIyY29tLmNhdF9hbmRfZG9nX3N0dWRpby5n",
            "ZW9tZXRyaWNfZm9vdGJhbGwucHJvdG9jb2winAcKB1JlcXVlc3QSTQoEdHlw",
            "ZRgBIAEoDjI/LmNvbS5jYXRfYW5kX2RvZ19zdHVkaW8uZ2VvbWV0cmljX2Zv",
            "b3RiYWxsLnByb3RvY29sLlJlcXVlc3RUeXBlEkQKA21hdRgCIAEoCzI3LmNv",
            "bS5jYXRfYW5kX2RvZ19zdHVkaW8uZ2VvbWV0cmljX2Zvb3RiYWxsLnByb3Rv",
            "Y29sLk1hdRJaCg5hdXRoZW50aWNhdGlvbhgDIAEoCzJCLmNvbS5jYXRfYW5k",
            "X2RvZ19zdHVkaW8uZ2VvbWV0cmljX2Zvb3RiYWxsLnByb3RvY29sLkF1dGhl",
            "bnRpY2F0aW9uElIKCmRpc2Nvbm5lY3QYBCABKAsyPi5jb20uY2F0X2FuZF9k",
            "b2dfc3R1ZGlvLmdlb21ldHJpY19mb290YmFsbC5wcm90b2NvbC5EaXNjb25u",
            "ZWN0Ek4KCGhvc3RHYW1lGAUgASgLMjwuY29tLmNhdF9hbmRfZG9nX3N0dWRp",
            "by5nZW9tZXRyaWNfZm9vdGJhbGwucHJvdG9jb2wuSG9zdEdhbWUSUAoJYXdh",
            "aXRHYW1lGAYgASgLMj0uY29tLmNhdF9hbmRfZG9nX3N0dWRpby5nZW9tZXRy",
            "aWNfZm9vdGJhbGwucHJvdG9jb2wuQXdhaXRHYW1lElIKCmdldFBsYXllcnMY",
            "ByABKAsyPi5jb20uY2F0X2FuZF9kb2dfc3R1ZGlvLmdlb21ldHJpY19mb290",
            "YmFsbC5wcm90b2NvbC5HZXRQbGF5ZXJzElQKC3BpbmdSZXF1ZXN0GAggASgL",
            "Mj8uY29tLmNhdF9hbmRfZG9nX3N0dWRpby5nZW9tZXRyaWNfZm9vdGJhbGwu",
            "cHJvdG9jb2wuUGluZ1JlcXVlc3QSWgoOdGVhbUludml0YXRpb24YCSABKAsy",
            "Qi5jb20uY2F0X2FuZF9kb2dfc3R1ZGlvLmdlb21ldHJpY19mb290YmFsbC5w",
            "cm90b2NvbC5UZWFtSW52aXRhdGlvbhJQCglsZWF2ZVRlYW0YCiABKAsyPS5j",
            "b20uY2F0X2FuZF9kb2dfc3R1ZGlvLmdlb21ldHJpY19mb290YmFsbC5wcm90",
            "b2NvbC5MZWF2ZVRlYW0SUgoKa2lja1BsYXllchgLIAEoCzI+LmNvbS5jYXRf",
            "YW5kX2RvZ19zdHVkaW8uZ2VvbWV0cmljX2Zvb3RiYWxsLnByb3RvY29sLktp",
            "Y2tQbGF5ZXIiKQoDTWF1Eg8KB2NhdE5hbWUYASABKAkSEQoJbWF1U2VjcmV0",
            "GAIgASgJIjQKDkF1dGhlbnRpY2F0aW9uEhAKCHVzZXJuYW1lGAEgASgJEhAK",
            "CHBhc3N3b3JkGAIgASgJIh0KCkRpc2Nvbm5lY3QSDwoHbWVzc2FnZRgBIAEo",
            "CSJBCghIb3N0R2FtZRIQCgh1c2VybmFtZRgBIAEoCRIQCghnYW1lTmFtZRgC",
            "IAEoCRIRCglob3N0Q29sb3IYAyABKAkiTQoJQXdhaXRHYW1lEhAKCHVzZXJu",
            "YW1lGAEgASgJEhYKDnByZWZlcnJlZENvbG9yGAIgASgJEhYKDndhaXRpbmdN",
            "ZXNzYWdlGAMgASgJIl4KCkdldFBsYXllcnMSUAoEbW9kZRgBIAEoDjJCLmNv",
            "bS5jYXRfYW5kX2RvZ19zdHVkaW8uZ2VvbWV0cmljX2Zvb3RiYWxsLnByb3Rv",
            "Y29sLkdldFBsYXllcnNNb2RlIg0KC1BpbmdSZXF1ZXN0IsgCCg5UZWFtSW52",
            "aXRhdGlvbhJsChd0ZWFtSW52aXRhdGlvbkRpcmVjdGlvbhgBIAEoDjJLLmNv",
            "bS5jYXRfYW5kX2RvZ19zdHVkaW8uZ2VvbWV0cmljX2Zvb3RiYWxsLnByb3Rv",
            "Y29sLlRlYW1JbnZpdGF0aW9uRGlyZWN0aW9uEmYKFHRlYW1JbnZpdGF0aW9u",
            "QWN0aW9uGAIgASgOMkguY29tLmNhdF9hbmRfZG9nX3N0dWRpby5nZW9tZXRy",
            "aWNfZm9vdGJhbGwucHJvdG9jb2wuVGVhbUludml0YXRpb25BY3Rpb24SFAoM",
            "Z2FtZUhvc3ROYW1lGAMgASgJEhUKDWludml0ZWRQbGF5ZXIYBCABKAkSDwoH",
            "bWVzc2FnZRgFIAEoCRIWCg5wcmVmZXJyZWRDb2xvchgGIAEoCRIKCgJpZBgH",
            "IAEoCSILCglMZWF2ZVRlYW0iHgoKS2lja1BsYXllchIQCgh1c2VybmFtZRgB",
            "IAEoCSqqAQoLUmVxdWVzdFR5cGUSBwoDTUFVEAASEgoOQVVUSEVOVElDQVRJ",
            "T04QARIOCgpESVNDT05ORUNUEAISDQoJSE9TVF9HQU1FEAMSDgoKQVdBSVRf",
            "R0FNRRAEEg8KC0dFVF9QTEFZRVJTEAUSCAoEUElORxAGEhMKD1RFQU1fSU5W",
            "SVRBVElPThAHEg4KCkxFQVZFX1RFQU0QCBIPCgtLSUNLX1BMQVlFUhAJKjcK",
            "DkdldFBsYXllcnNNb2RlEg4KCkdBTUVfSE9TVFMQABIVChFXQUlUSU5HX0ZP",
            "Ul9HQU1FUxABKksKF1RlYW1JbnZpdGF0aW9uRGlyZWN0aW9uEhcKE0ZST01f",
            "SE9TVF9UT19QTEFZRVIQABIXChNGUk9NX1BMQVlFUl9UT19IT1NUEAEqOgoU",
            "VGVhbUludml0YXRpb25BY3Rpb24SCgoGQUNDRVBUEAASCgoGUkVKRUNUEAES",
            "CgoGQ1JFQVRFEAJCTgoyY29tLmNhdF9hbmRfZG9nX3N0dWRpby5nZW9tZXRy",
            "aWNfZm9vdGJhbGwucHJvdG9jb2xCGEdlb21ldHJpY0Zvb3RiYWxsUmVxdWVz",
            "dGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.RequestType), typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode), typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationDirection), typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationAction), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.Request), global::Com.CatAndDogStudio.GeometricFootball.Protocol.Request.Parser, new[]{ "Type", "Mau", "Authentication", "Disconnect", "HostGame", "AwaitGame", "GetPlayers", "PingRequest", "TeamInvitation", "LeaveTeam", "KickPlayer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.Mau), global::Com.CatAndDogStudio.GeometricFootball.Protocol.Mau.Parser, new[]{ "CatName", "MauSecret" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.Authentication), global::Com.CatAndDogStudio.GeometricFootball.Protocol.Authentication.Parser, new[]{ "Username", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.Disconnect), global::Com.CatAndDogStudio.GeometricFootball.Protocol.Disconnect.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.HostGame), global::Com.CatAndDogStudio.GeometricFootball.Protocol.HostGame.Parser, new[]{ "Username", "GameName", "HostColor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.AwaitGame), global::Com.CatAndDogStudio.GeometricFootball.Protocol.AwaitGame.Parser, new[]{ "Username", "PreferredColor", "WaitingMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayers), global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayers.Parser, new[]{ "Mode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.PingRequest), global::Com.CatAndDogStudio.GeometricFootball.Protocol.PingRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitation), global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitation.Parser, new[]{ "TeamInvitationDirection", "TeamInvitationAction", "GameHostName", "InvitedPlayer", "Message", "PreferredColor", "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.LeaveTeam), global::Com.CatAndDogStudio.GeometricFootball.Protocol.LeaveTeam.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.CatAndDogStudio.GeometricFootball.Protocol.KickPlayer), global::Com.CatAndDogStudio.GeometricFootball.Protocol.KickPlayer.Parser, new[]{ "Username" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RequestType {
    [pbr::OriginalName("MAU")] Mau = 0,
    [pbr::OriginalName("AUTHENTICATION")] Authentication = 1,
    [pbr::OriginalName("DISCONNECT")] Disconnect = 2,
    [pbr::OriginalName("HOST_GAME")] HostGame = 3,
    [pbr::OriginalName("AWAIT_GAME")] AwaitGame = 4,
    [pbr::OriginalName("GET_PLAYERS")] GetPlayers = 5,
    [pbr::OriginalName("PING")] Ping = 6,
    [pbr::OriginalName("TEAM_INVITATION")] TeamInvitation = 7,
    [pbr::OriginalName("LEAVE_TEAM")] LeaveTeam = 8,
    [pbr::OriginalName("KICK_PLAYER")] KickPlayer = 9,
  }

  public enum GetPlayersMode {
    [pbr::OriginalName("GAME_HOSTS")] GameHosts = 0,
    [pbr::OriginalName("WAITING_FOR_GAMES")] WaitingForGames = 1,
  }

  public enum TeamInvitationDirection {
    [pbr::OriginalName("FROM_HOST_TO_PLAYER")] FromHostToPlayer = 0,
    [pbr::OriginalName("FROM_PLAYER_TO_HOST")] FromPlayerToHost = 1,
  }

  public enum TeamInvitationAction {
    [pbr::OriginalName("ACCEPT")] Accept = 0,
    [pbr::OriginalName("REJECT")] Reject = 1,
    [pbr::OriginalName("CREATE")] Create = 2,
  }

  #endregion

  #region Messages
  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      type_ = other.type_;
      mau_ = other.mau_ != null ? other.mau_.Clone() : null;
      authentication_ = other.authentication_ != null ? other.authentication_.Clone() : null;
      disconnect_ = other.disconnect_ != null ? other.disconnect_.Clone() : null;
      hostGame_ = other.hostGame_ != null ? other.hostGame_.Clone() : null;
      awaitGame_ = other.awaitGame_ != null ? other.awaitGame_.Clone() : null;
      getPlayers_ = other.getPlayers_ != null ? other.getPlayers_.Clone() : null;
      pingRequest_ = other.pingRequest_ != null ? other.pingRequest_.Clone() : null;
      teamInvitation_ = other.teamInvitation_ != null ? other.teamInvitation_.Clone() : null;
      leaveTeam_ = other.leaveTeam_ != null ? other.leaveTeam_.Clone() : null;
      kickPlayer_ = other.kickPlayer_ != null ? other.kickPlayer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.RequestType type_ = global::Com.CatAndDogStudio.GeometricFootball.Protocol.RequestType.Mau;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.RequestType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "mau" field.</summary>
    public const int MauFieldNumber = 2;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.Mau mau_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.Mau Mau {
      get { return mau_; }
      set {
        mau_ = value;
      }
    }

    /// <summary>Field number for the "authentication" field.</summary>
    public const int AuthenticationFieldNumber = 3;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.Authentication authentication_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.Authentication Authentication {
      get { return authentication_; }
      set {
        authentication_ = value;
      }
    }

    /// <summary>Field number for the "disconnect" field.</summary>
    public const int DisconnectFieldNumber = 4;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.Disconnect disconnect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.Disconnect Disconnect {
      get { return disconnect_; }
      set {
        disconnect_ = value;
      }
    }

    /// <summary>Field number for the "hostGame" field.</summary>
    public const int HostGameFieldNumber = 5;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.HostGame hostGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.HostGame HostGame {
      get { return hostGame_; }
      set {
        hostGame_ = value;
      }
    }

    /// <summary>Field number for the "awaitGame" field.</summary>
    public const int AwaitGameFieldNumber = 6;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.AwaitGame awaitGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.AwaitGame AwaitGame {
      get { return awaitGame_; }
      set {
        awaitGame_ = value;
      }
    }

    /// <summary>Field number for the "getPlayers" field.</summary>
    public const int GetPlayersFieldNumber = 7;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayers getPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayers GetPlayers {
      get { return getPlayers_; }
      set {
        getPlayers_ = value;
      }
    }

    /// <summary>Field number for the "pingRequest" field.</summary>
    public const int PingRequestFieldNumber = 8;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.PingRequest pingRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.PingRequest PingRequest {
      get { return pingRequest_; }
      set {
        pingRequest_ = value;
      }
    }

    /// <summary>Field number for the "teamInvitation" field.</summary>
    public const int TeamInvitationFieldNumber = 9;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitation teamInvitation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitation TeamInvitation {
      get { return teamInvitation_; }
      set {
        teamInvitation_ = value;
      }
    }

    /// <summary>Field number for the "leaveTeam" field.</summary>
    public const int LeaveTeamFieldNumber = 10;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.LeaveTeam leaveTeam_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.LeaveTeam LeaveTeam {
      get { return leaveTeam_; }
      set {
        leaveTeam_ = value;
      }
    }

    /// <summary>Field number for the "kickPlayer" field.</summary>
    public const int KickPlayerFieldNumber = 11;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.KickPlayer kickPlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.KickPlayer KickPlayer {
      get { return kickPlayer_; }
      set {
        kickPlayer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Mau, other.Mau)) return false;
      if (!object.Equals(Authentication, other.Authentication)) return false;
      if (!object.Equals(Disconnect, other.Disconnect)) return false;
      if (!object.Equals(HostGame, other.HostGame)) return false;
      if (!object.Equals(AwaitGame, other.AwaitGame)) return false;
      if (!object.Equals(GetPlayers, other.GetPlayers)) return false;
      if (!object.Equals(PingRequest, other.PingRequest)) return false;
      if (!object.Equals(TeamInvitation, other.TeamInvitation)) return false;
      if (!object.Equals(LeaveTeam, other.LeaveTeam)) return false;
      if (!object.Equals(KickPlayer, other.KickPlayer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Com.CatAndDogStudio.GeometricFootball.Protocol.RequestType.Mau) hash ^= Type.GetHashCode();
      if (mau_ != null) hash ^= Mau.GetHashCode();
      if (authentication_ != null) hash ^= Authentication.GetHashCode();
      if (disconnect_ != null) hash ^= Disconnect.GetHashCode();
      if (hostGame_ != null) hash ^= HostGame.GetHashCode();
      if (awaitGame_ != null) hash ^= AwaitGame.GetHashCode();
      if (getPlayers_ != null) hash ^= GetPlayers.GetHashCode();
      if (pingRequest_ != null) hash ^= PingRequest.GetHashCode();
      if (teamInvitation_ != null) hash ^= TeamInvitation.GetHashCode();
      if (leaveTeam_ != null) hash ^= LeaveTeam.GetHashCode();
      if (kickPlayer_ != null) hash ^= KickPlayer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Com.CatAndDogStudio.GeometricFootball.Protocol.RequestType.Mau) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (mau_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Mau);
      }
      if (authentication_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Authentication);
      }
      if (disconnect_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Disconnect);
      }
      if (hostGame_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(HostGame);
      }
      if (awaitGame_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AwaitGame);
      }
      if (getPlayers_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(GetPlayers);
      }
      if (pingRequest_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PingRequest);
      }
      if (teamInvitation_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TeamInvitation);
      }
      if (leaveTeam_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LeaveTeam);
      }
      if (kickPlayer_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(KickPlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Com.CatAndDogStudio.GeometricFootball.Protocol.RequestType.Mau) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (mau_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mau);
      }
      if (authentication_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Authentication);
      }
      if (disconnect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Disconnect);
      }
      if (hostGame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HostGame);
      }
      if (awaitGame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AwaitGame);
      }
      if (getPlayers_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetPlayers);
      }
      if (pingRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PingRequest);
      }
      if (teamInvitation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TeamInvitation);
      }
      if (leaveTeam_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeaveTeam);
      }
      if (kickPlayer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KickPlayer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Com.CatAndDogStudio.GeometricFootball.Protocol.RequestType.Mau) {
        Type = other.Type;
      }
      if (other.mau_ != null) {
        if (mau_ == null) {
          Mau = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.Mau();
        }
        Mau.MergeFrom(other.Mau);
      }
      if (other.authentication_ != null) {
        if (authentication_ == null) {
          Authentication = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.Authentication();
        }
        Authentication.MergeFrom(other.Authentication);
      }
      if (other.disconnect_ != null) {
        if (disconnect_ == null) {
          Disconnect = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.Disconnect();
        }
        Disconnect.MergeFrom(other.Disconnect);
      }
      if (other.hostGame_ != null) {
        if (hostGame_ == null) {
          HostGame = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.HostGame();
        }
        HostGame.MergeFrom(other.HostGame);
      }
      if (other.awaitGame_ != null) {
        if (awaitGame_ == null) {
          AwaitGame = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.AwaitGame();
        }
        AwaitGame.MergeFrom(other.AwaitGame);
      }
      if (other.getPlayers_ != null) {
        if (getPlayers_ == null) {
          GetPlayers = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayers();
        }
        GetPlayers.MergeFrom(other.GetPlayers);
      }
      if (other.pingRequest_ != null) {
        if (pingRequest_ == null) {
          PingRequest = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.PingRequest();
        }
        PingRequest.MergeFrom(other.PingRequest);
      }
      if (other.teamInvitation_ != null) {
        if (teamInvitation_ == null) {
          TeamInvitation = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitation();
        }
        TeamInvitation.MergeFrom(other.TeamInvitation);
      }
      if (other.leaveTeam_ != null) {
        if (leaveTeam_ == null) {
          LeaveTeam = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.LeaveTeam();
        }
        LeaveTeam.MergeFrom(other.LeaveTeam);
      }
      if (other.kickPlayer_ != null) {
        if (kickPlayer_ == null) {
          KickPlayer = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.KickPlayer();
        }
        KickPlayer.MergeFrom(other.KickPlayer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Com.CatAndDogStudio.GeometricFootball.Protocol.RequestType) input.ReadEnum();
            break;
          }
          case 18: {
            if (mau_ == null) {
              Mau = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.Mau();
            }
            input.ReadMessage(Mau);
            break;
          }
          case 26: {
            if (authentication_ == null) {
              Authentication = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.Authentication();
            }
            input.ReadMessage(Authentication);
            break;
          }
          case 34: {
            if (disconnect_ == null) {
              Disconnect = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.Disconnect();
            }
            input.ReadMessage(Disconnect);
            break;
          }
          case 42: {
            if (hostGame_ == null) {
              HostGame = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.HostGame();
            }
            input.ReadMessage(HostGame);
            break;
          }
          case 50: {
            if (awaitGame_ == null) {
              AwaitGame = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.AwaitGame();
            }
            input.ReadMessage(AwaitGame);
            break;
          }
          case 58: {
            if (getPlayers_ == null) {
              GetPlayers = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayers();
            }
            input.ReadMessage(GetPlayers);
            break;
          }
          case 66: {
            if (pingRequest_ == null) {
              PingRequest = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.PingRequest();
            }
            input.ReadMessage(PingRequest);
            break;
          }
          case 74: {
            if (teamInvitation_ == null) {
              TeamInvitation = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitation();
            }
            input.ReadMessage(TeamInvitation);
            break;
          }
          case 82: {
            if (leaveTeam_ == null) {
              LeaveTeam = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.LeaveTeam();
            }
            input.ReadMessage(LeaveTeam);
            break;
          }
          case 90: {
            if (kickPlayer_ == null) {
              KickPlayer = new global::Com.CatAndDogStudio.GeometricFootball.Protocol.KickPlayer();
            }
            input.ReadMessage(KickPlayer);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Mau : pb::IMessage<Mau> {
    private static readonly pb::MessageParser<Mau> _parser = new pb::MessageParser<Mau>(() => new Mau());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Mau> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauRequestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mau() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mau(Mau other) : this() {
      catName_ = other.catName_;
      mauSecret_ = other.mauSecret_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mau Clone() {
      return new Mau(this);
    }

    /// <summary>Field number for the "catName" field.</summary>
    public const int CatNameFieldNumber = 1;
    private string catName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CatName {
      get { return catName_; }
      set {
        catName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mauSecret" field.</summary>
    public const int MauSecretFieldNumber = 2;
    private string mauSecret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MauSecret {
      get { return mauSecret_; }
      set {
        mauSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Mau);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Mau other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CatName != other.CatName) return false;
      if (MauSecret != other.MauSecret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CatName.Length != 0) hash ^= CatName.GetHashCode();
      if (MauSecret.Length != 0) hash ^= MauSecret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CatName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CatName);
      }
      if (MauSecret.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MauSecret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CatName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CatName);
      }
      if (MauSecret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MauSecret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Mau other) {
      if (other == null) {
        return;
      }
      if (other.CatName.Length != 0) {
        CatName = other.CatName;
      }
      if (other.MauSecret.Length != 0) {
        MauSecret = other.MauSecret;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CatName = input.ReadString();
            break;
          }
          case 18: {
            MauSecret = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Authentication : pb::IMessage<Authentication> {
    private static readonly pb::MessageParser<Authentication> _parser = new pb::MessageParser<Authentication>(() => new Authentication());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Authentication> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauRequestReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authentication() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authentication(Authentication other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authentication Clone() {
      return new Authentication(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Authentication);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Authentication other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Authentication other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Disconnect : pb::IMessage<Disconnect> {
    private static readonly pb::MessageParser<Disconnect> _parser = new pb::MessageParser<Disconnect>(() => new Disconnect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Disconnect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauRequestReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Disconnect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Disconnect(Disconnect other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Disconnect Clone() {
      return new Disconnect(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Disconnect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Disconnect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Disconnect other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HostGame : pb::IMessage<HostGame> {
    private static readonly pb::MessageParser<HostGame> _parser = new pb::MessageParser<HostGame>(() => new HostGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HostGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauRequestReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HostGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HostGame(HostGame other) : this() {
      username_ = other.username_;
      gameName_ = other.gameName_;
      hostColor_ = other.hostColor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HostGame Clone() {
      return new HostGame(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameName" field.</summary>
    public const int GameNameFieldNumber = 2;
    private string gameName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameName {
      get { return gameName_; }
      set {
        gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hostColor" field.</summary>
    public const int HostColorFieldNumber = 3;
    private string hostColor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostColor {
      get { return hostColor_; }
      set {
        hostColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HostGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HostGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (GameName != other.GameName) return false;
      if (HostColor != other.HostColor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (GameName.Length != 0) hash ^= GameName.GetHashCode();
      if (HostColor.Length != 0) hash ^= HostColor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (GameName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameName);
      }
      if (HostColor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HostColor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (GameName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
      }
      if (HostColor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostColor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HostGame other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.GameName.Length != 0) {
        GameName = other.GameName;
      }
      if (other.HostColor.Length != 0) {
        HostColor = other.HostColor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            GameName = input.ReadString();
            break;
          }
          case 26: {
            HostColor = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AwaitGame : pb::IMessage<AwaitGame> {
    private static readonly pb::MessageParser<AwaitGame> _parser = new pb::MessageParser<AwaitGame>(() => new AwaitGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AwaitGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauRequestReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwaitGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwaitGame(AwaitGame other) : this() {
      username_ = other.username_;
      preferredColor_ = other.preferredColor_;
      waitingMessage_ = other.waitingMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwaitGame Clone() {
      return new AwaitGame(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "preferredColor" field.</summary>
    public const int PreferredColorFieldNumber = 2;
    private string preferredColor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PreferredColor {
      get { return preferredColor_; }
      set {
        preferredColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "waitingMessage" field.</summary>
    public const int WaitingMessageFieldNumber = 3;
    private string waitingMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WaitingMessage {
      get { return waitingMessage_; }
      set {
        waitingMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AwaitGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AwaitGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (PreferredColor != other.PreferredColor) return false;
      if (WaitingMessage != other.WaitingMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (PreferredColor.Length != 0) hash ^= PreferredColor.GetHashCode();
      if (WaitingMessage.Length != 0) hash ^= WaitingMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (PreferredColor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PreferredColor);
      }
      if (WaitingMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WaitingMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (PreferredColor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreferredColor);
      }
      if (WaitingMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WaitingMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AwaitGame other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.PreferredColor.Length != 0) {
        PreferredColor = other.PreferredColor;
      }
      if (other.WaitingMessage.Length != 0) {
        WaitingMessage = other.WaitingMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            PreferredColor = input.ReadString();
            break;
          }
          case 26: {
            WaitingMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetPlayers : pb::IMessage<GetPlayers> {
    private static readonly pb::MessageParser<GetPlayers> _parser = new pb::MessageParser<GetPlayers>(() => new GetPlayers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPlayers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauRequestReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayers(GetPlayers other) : this() {
      mode_ = other.mode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayers Clone() {
      return new GetPlayers(this);
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 1;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode mode_ = global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode.GameHosts;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPlayers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPlayers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mode != other.Mode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mode != global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode.GameHosts) hash ^= Mode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mode != global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode.GameHosts) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mode != global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode.GameHosts) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPlayers other) {
      if (other == null) {
        return;
      }
      if (other.Mode != global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode.GameHosts) {
        Mode = other.Mode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Mode = (global::Com.CatAndDogStudio.GeometricFootball.Protocol.GetPlayersMode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PingRequest : pb::IMessage<PingRequest> {
    private static readonly pb::MessageParser<PingRequest> _parser = new pb::MessageParser<PingRequest>(() => new PingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauRequestReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingRequest(PingRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingRequest Clone() {
      return new PingRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class TeamInvitation : pb::IMessage<TeamInvitation> {
    private static readonly pb::MessageParser<TeamInvitation> _parser = new pb::MessageParser<TeamInvitation>(() => new TeamInvitation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamInvitation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauRequestReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamInvitation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamInvitation(TeamInvitation other) : this() {
      teamInvitationDirection_ = other.teamInvitationDirection_;
      teamInvitationAction_ = other.teamInvitationAction_;
      gameHostName_ = other.gameHostName_;
      invitedPlayer_ = other.invitedPlayer_;
      message_ = other.message_;
      preferredColor_ = other.preferredColor_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamInvitation Clone() {
      return new TeamInvitation(this);
    }

    /// <summary>Field number for the "teamInvitationDirection" field.</summary>
    public const int TeamInvitationDirectionFieldNumber = 1;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationDirection teamInvitationDirection_ = global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationDirection.FromHostToPlayer;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationDirection TeamInvitationDirection {
      get { return teamInvitationDirection_; }
      set {
        teamInvitationDirection_ = value;
      }
    }

    /// <summary>Field number for the "teamInvitationAction" field.</summary>
    public const int TeamInvitationActionFieldNumber = 2;
    private global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationAction teamInvitationAction_ = global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationAction.Accept;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationAction TeamInvitationAction {
      get { return teamInvitationAction_; }
      set {
        teamInvitationAction_ = value;
      }
    }

    /// <summary>Field number for the "gameHostName" field.</summary>
    public const int GameHostNameFieldNumber = 3;
    private string gameHostName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameHostName {
      get { return gameHostName_; }
      set {
        gameHostName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "invitedPlayer" field.</summary>
    public const int InvitedPlayerFieldNumber = 4;
    private string invitedPlayer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InvitedPlayer {
      get { return invitedPlayer_; }
      set {
        invitedPlayer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "preferredColor" field.</summary>
    public const int PreferredColorFieldNumber = 6;
    private string preferredColor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PreferredColor {
      get { return preferredColor_; }
      set {
        preferredColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 7;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamInvitation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamInvitation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TeamInvitationDirection != other.TeamInvitationDirection) return false;
      if (TeamInvitationAction != other.TeamInvitationAction) return false;
      if (GameHostName != other.GameHostName) return false;
      if (InvitedPlayer != other.InvitedPlayer) return false;
      if (Message != other.Message) return false;
      if (PreferredColor != other.PreferredColor) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TeamInvitationDirection != global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationDirection.FromHostToPlayer) hash ^= TeamInvitationDirection.GetHashCode();
      if (TeamInvitationAction != global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationAction.Accept) hash ^= TeamInvitationAction.GetHashCode();
      if (GameHostName.Length != 0) hash ^= GameHostName.GetHashCode();
      if (InvitedPlayer.Length != 0) hash ^= InvitedPlayer.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (PreferredColor.Length != 0) hash ^= PreferredColor.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TeamInvitationDirection != global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationDirection.FromHostToPlayer) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TeamInvitationDirection);
      }
      if (TeamInvitationAction != global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationAction.Accept) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TeamInvitationAction);
      }
      if (GameHostName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GameHostName);
      }
      if (InvitedPlayer.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InvitedPlayer);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (PreferredColor.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PreferredColor);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TeamInvitationDirection != global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationDirection.FromHostToPlayer) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TeamInvitationDirection);
      }
      if (TeamInvitationAction != global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationAction.Accept) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TeamInvitationAction);
      }
      if (GameHostName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameHostName);
      }
      if (InvitedPlayer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InvitedPlayer);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (PreferredColor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreferredColor);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamInvitation other) {
      if (other == null) {
        return;
      }
      if (other.TeamInvitationDirection != global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationDirection.FromHostToPlayer) {
        TeamInvitationDirection = other.TeamInvitationDirection;
      }
      if (other.TeamInvitationAction != global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationAction.Accept) {
        TeamInvitationAction = other.TeamInvitationAction;
      }
      if (other.GameHostName.Length != 0) {
        GameHostName = other.GameHostName;
      }
      if (other.InvitedPlayer.Length != 0) {
        InvitedPlayer = other.InvitedPlayer;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.PreferredColor.Length != 0) {
        PreferredColor = other.PreferredColor;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TeamInvitationDirection = (global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationDirection) input.ReadEnum();
            break;
          }
          case 16: {
            TeamInvitationAction = (global::Com.CatAndDogStudio.GeometricFootball.Protocol.TeamInvitationAction) input.ReadEnum();
            break;
          }
          case 26: {
            GameHostName = input.ReadString();
            break;
          }
          case 34: {
            InvitedPlayer = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
          case 50: {
            PreferredColor = input.ReadString();
            break;
          }
          case 58: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaveTeam : pb::IMessage<LeaveTeam> {
    private static readonly pb::MessageParser<LeaveTeam> _parser = new pb::MessageParser<LeaveTeam>(() => new LeaveTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauRequestReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveTeam(LeaveTeam other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveTeam Clone() {
      return new LeaveTeam(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveTeam other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class KickPlayer : pb::IMessage<KickPlayer> {
    private static readonly pb::MessageParser<KickPlayer> _parser = new pb::MessageParser<KickPlayer>(() => new KickPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KickPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.CatAndDogStudio.GeometricFootball.Protocol.MauRequestReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickPlayer(KickPlayer other) : this() {
      username_ = other.username_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickPlayer Clone() {
      return new KickPlayer(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KickPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KickPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KickPlayer other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
